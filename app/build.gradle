plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.words"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
    packagingOptions {
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'



    /*
    Dagger
    Release: https://github.com/google/dagger/releases
    */
    def dagger_version = "2.33"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"


    /*
    Lifecycle components, "ViewModel"
    Release: https://developer.android.com/jetpack/androidx/releases/lifecycle
     */
    // Lifecycle components
    def life_cycle = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$life_cycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$life_cycle"

    /*
    Navigation
    Release: https://developer.android.com/jetpack/androidx/releases/navigation
     */
    def nav_version = "2.3.5"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    /*
    RecyclerView
    Release: https://developer.android.com/jetpack/androidx/releases/recyclerview
     */
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    // For control over item selection of both touch and mouse driven selection
    implementation("androidx.recyclerview:recyclerview-selection:1.1.0")

    /*
    Room
    Release: https://developer.android.com/jetpack/androidx/releases/room
     */
    def room_version = "2.3.0"
    implementation"androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"



    // AndroidTesting
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "org.mockito:mockito-android:2.28.2"
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    // Test Fragment interactions with theier NavController in isolation,
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Espresso
    def espresso_version = "3.4.0"
    // Contains core and basic views.
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    // External contributions that contain DatePicker, RecyclerView, and Drawer actions
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"

    // https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-test/
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'

    // Tells Kapt to act on the AndroidTest folder. Dagger will now create a MyTestApplication
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // optional - Test helpers
    testImplementation"androidx.room:room-testing:$room_version"




    // Testing
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    testImplementation "androidx.test.ext:junit-ktx:1.1.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "org.mockito:mockito-android:2.28.2"

    // Testing Fragments
    debugImplementation "androidx.fragment:fragment-testing:1.3.3"



}